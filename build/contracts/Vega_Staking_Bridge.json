{
  "contractName": "Vega_Staking_Bridge",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "vega_public_key",
          "type": "bytes32"
        }
      ],
      "name": "Stake_Deposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "vega_public_key",
          "type": "bytes32"
        }
      ],
      "name": "Stake_Removed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "vega_public_key",
          "type": "bytes32"
        }
      ],
      "name": "Stake_Transferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "vega_public_key",
          "type": "bytes32"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "vega_public_key",
          "type": "bytes32"
        }
      ],
      "name": "remove_stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "new_address",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "vega_public_key",
          "type": "bytes32"
        }
      ],
      "name": "transfer_stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "staking_token",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "vega_public_key",
          "type": "bytes32"
        }
      ],
      "name": "stake_balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"vega_public_key\",\"type\":\"bytes32\"}],\"name\":\"Stake_Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"vega_public_key\",\"type\":\"bytes32\"}],\"name\":\"Stake_Removed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"vega_public_key\",\"type\":\"bytes32\"}],\"name\":\"Stake_Transferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"vega_public_key\",\"type\":\"bytes32\"}],\"name\":\"remove_stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"vega_public_key\",\"type\":\"bytes32\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"vega_public_key\",\"type\":\"bytes32\"}],\"name\":\"stake_balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"staking_token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"new_address\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"vega_public_key\",\"type\":\"bytes32\"}],\"name\":\"transfer_stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Vega Protocol\",\"kind\":\"dev\",\"methods\":{\"remove_stake(uint256,bytes32)\":{\"details\":\"Emits Stake_Removed event if successful\",\"params\":{\"amount\":\"Amount of tokens to remove from staking\",\"vega_public_key\":\"Target Vega public key from which to deduct stake\"}},\"stake(uint256,bytes32)\":{\"details\":\"Emits Stake_Deposited eventUser MUST run \\\"approve\\\" on token prior to running Stake\",\"params\":{\"amount\":\"Token amount to stake\",\"vega_public_key\":\"Target Vega public key to be credited with the stake\"}},\"stake_balance(address,bytes32)\":{\"details\":\"This is IStake.stake_balance\",\"params\":{\"target\":\"Target address to check\",\"vega_public_key\":\"Target vega public key to check\"},\"returns\":{\"_0\":\"the number of tokens staked for that address->vega_public_key pair\"}},\"staking_token()\":{\"details\":\"This is IStake.staking_token\",\"returns\":{\"_0\":\"the address of the token that is able to be staked\"}},\"transfer_stake(uint256,address,bytes32)\":{\"details\":\"Emits Stake_Transfered event if successful\",\"params\":{\"amount\":\"Stake amount to transfer\",\"new_address\":\"Target ETH address to recieve the stake\",\"vega_public_key\":\"Target Vega public key to be credited with the transfer\"}}},\"stateVariables\":{\"stakes\":{\"details\":\"user => amount staked\"}},\"title\":\"ERC20 Staking Bridge\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"remove_stake(uint256,bytes32)\":{\"notice\":\"This removes specified amount of stake of available to user\"},\"stake(uint256,bytes32)\":{\"notice\":\"This stakes the given amount of tokens and credits them to the provided Vega public key\"},\"transfer_stake(uint256,address,bytes32)\":{\"notice\":\"This transfers all stake from the sender's address to the \\\"new_address\\\"\"}},\"notice\":\"This contract manages the vesting of the Vega V2 ERC20 token\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/danny/source/vega/Staking_Bridge/Staking_Bridge/contracts/Vega_Staking_Bridge.sol\":\"Vega_Staking_Bridge\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/danny/source/vega/Staking_Bridge/Staking_Bridge/contracts/IERC20.sol\":{\"keccak256\":\"0xbbc10d704a97ce2aa32fa00f395e3f62910459ee532b0b6232c94b8961054614\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f32338f1c5423e59c688733f6cb3ff744f9433af6136fed1821bf9983844bcd\",\"dweb:/ipfs/QmcUvMGgQKTH2Zu6trMamowuymbpYeJd5srr4QQgq3rsJz\"]},\"/home/danny/source/vega/Staking_Bridge/Staking_Bridge/contracts/IStake.sol\":{\"keccak256\":\"0xc30e9f3375ca00dffe7baa9f126e7eb27d4f486d4b2665142b6f7b30f79d8e35\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1b5d989c398073d86d3cf17a9de529af0b70c9e0148446ede6aafc1224e9f29\",\"dweb:/ipfs/QmZsyronJNbZEYE3YqNbopNVazMvx8Nikg7x4pDEW4aBGi\"]},\"/home/danny/source/vega/Staking_Bridge/Staking_Bridge/contracts/Vega_Staking_Bridge.sol\":{\"keccak256\":\"0x950087afa35d21522615f32bd6d35d77916e381de4bc7c3421a4c18891398f5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2d048354e1f4096ab6f2b533504047f6cef16759e33a11817158586e7669c88\",\"dweb:/ipfs/QmatJLCfg6tayeUbiRCe7tbiHvMD8F5av81W2irh9DVkLA\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610a40380380610a408339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100ff565b600081519050610087816100e8565b92915050565b60006020828403121561009f57600080fd5b60006100ad84828501610078565b91505092915050565b60006100c1826100c8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6100f1816100b6565b81146100fc57600080fd5b50565b6109328061010e6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063274abf341461005c5780632dc7d74c1461008c57806348c66e13146100aa57806383c592cf146100c6578063dd01ba0b146100e2575b600080fd5b610076600480360381019061007191906105f1565b6100fe565b604051610083919061077a565b60405180910390f35b610094610159565b6040516100a191906106ff565b60405180910390f35b6100c460048036038101906100bf9190610656565b610182565b005b6100e060048036038101906100db91906106a5565b6102bb565b005b6100fc60048036038101906100f791906106a5565b61042d565b005b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b82600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060008282546101e291906107eb565b9250508190555082600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060008282546102499190610795565b92505081905550808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f296aca09e6f616abedcd9cd45ac378207310452b7a713289374fd1b35e2c2fbe866040516102ae919061077a565b60405180910390a4505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016103189392919061071a565b602060405180830381600087803b15801561033257600080fd5b505af1158015610346573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036a919061062d565b61037357600080fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060008282546103d39190610795565b92505081905550803373ffffffffffffffffffffffffffffffffffffffff167f9e3e33edf5dcded4adabc51b1266225d00fa41516bfcad69513fa4eca69519da84604051610421919061077a565b60405180910390a35050565b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020600082825461048d91906107eb565b9250508190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016104ef929190610751565b602060405180830381600087803b15801561050957600080fd5b505af115801561051d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610541919061062d565b61054a57600080fd5b803373ffffffffffffffffffffffffffffffffffffffff167fa131d16963736e4c641f27a7f82f2e350b5971e555ae06ae906892bbba0a093984604051610591919061077a565b60405180910390a35050565b6000813590506105ac816108a0565b92915050565b6000815190506105c1816108b7565b92915050565b6000813590506105d6816108ce565b92915050565b6000813590506105eb816108e5565b92915050565b6000806040838503121561060457600080fd5b60006106128582860161059d565b9250506020610623858286016105c7565b9150509250929050565b60006020828403121561063f57600080fd5b600061064d848285016105b2565b91505092915050565b60008060006060848603121561066b57600080fd5b6000610679868287016105dc565b935050602061068a8682870161059d565b925050604061069b868287016105c7565b9150509250925092565b600080604083850312156106b857600080fd5b60006106c6858286016105dc565b92505060206106d7858286016105c7565b9150509250929050565b6106ea8161081f565b82525050565b6106f981610867565b82525050565b600060208201905061071460008301846106e1565b92915050565b600060608201905061072f60008301866106e1565b61073c60208301856106e1565b61074960408301846106f0565b949350505050565b600060408201905061076660008301856106e1565b61077360208301846106f0565b9392505050565b600060208201905061078f60008301846106f0565b92915050565b60006107a082610867565b91506107ab83610867565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156107e0576107df610871565b5b828201905092915050565b60006107f682610867565b915061080183610867565b92508282101561081457610813610871565b5b828203905092915050565b600061082a82610847565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6108a98161081f565b81146108b457600080fd5b50565b6108c081610831565b81146108cb57600080fd5b50565b6108d78161083d565b81146108e257600080fd5b50565b6108ee81610867565b81146108f957600080fd5b5056fea26469706673582212203fb6630499269c9545010c2aaf3fa130f3db33da56cff5d34c187c48c48c6a0564736f6c63430008010033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c8063274abf341461005c5780632dc7d74c1461008c57806348c66e13146100aa57806383c592cf146100c6578063dd01ba0b146100e2575b600080fd5b610076600480360381019061007191906105f1565b6100fe565b604051610083919061077a565b60405180910390f35b610094610159565b6040516100a191906106ff565b60405180910390f35b6100c460048036038101906100bf9190610656565b610182565b005b6100e060048036038101906100db91906106a5565b6102bb565b005b6100fc60048036038101906100f791906106a5565b61042d565b005b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b82600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060008282546101e291906107eb565b9250508190555082600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060008282546102499190610795565b92505081905550808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f296aca09e6f616abedcd9cd45ac378207310452b7a713289374fd1b35e2c2fbe866040516102ae919061077a565b60405180910390a4505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016103189392919061071a565b602060405180830381600087803b15801561033257600080fd5b505af1158015610346573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036a919061062d565b61037357600080fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060008282546103d39190610795565b92505081905550803373ffffffffffffffffffffffffffffffffffffffff167f9e3e33edf5dcded4adabc51b1266225d00fa41516bfcad69513fa4eca69519da84604051610421919061077a565b60405180910390a35050565b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020600082825461048d91906107eb565b9250508190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016104ef929190610751565b602060405180830381600087803b15801561050957600080fd5b505af115801561051d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610541919061062d565b61054a57600080fd5b803373ffffffffffffffffffffffffffffffffffffffff167fa131d16963736e4c641f27a7f82f2e350b5971e555ae06ae906892bbba0a093984604051610591919061077a565b60405180910390a35050565b6000813590506105ac816108a0565b92915050565b6000815190506105c1816108b7565b92915050565b6000813590506105d6816108ce565b92915050565b6000813590506105eb816108e5565b92915050565b6000806040838503121561060457600080fd5b60006106128582860161059d565b9250506020610623858286016105c7565b9150509250929050565b60006020828403121561063f57600080fd5b600061064d848285016105b2565b91505092915050565b60008060006060848603121561066b57600080fd5b6000610679868287016105dc565b935050602061068a8682870161059d565b925050604061069b868287016105c7565b9150509250925092565b600080604083850312156106b857600080fd5b60006106c6858286016105dc565b92505060206106d7858286016105c7565b9150509250929050565b6106ea8161081f565b82525050565b6106f981610867565b82525050565b600060208201905061071460008301846106e1565b92915050565b600060608201905061072f60008301866106e1565b61073c60208301856106e1565b61074960408301846106f0565b949350505050565b600060408201905061076660008301856106e1565b61077360208301846106f0565b9392505050565b600060208201905061078f60008301846106f0565b92915050565b60006107a082610867565b91506107ab83610867565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156107e0576107df610871565b5b828201905092915050565b60006107f682610867565b915061080183610867565b92508282101561081457610813610871565b5b828203905092915050565b600061082a82610847565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6108a98161081f565b81146108b457600080fd5b50565b6108c081610831565b81146108cb57600080fd5b50565b6108d78161083d565b81146108e257600080fd5b50565b6108ee81610867565b81146108f957600080fd5b5056fea26469706673582212203fb6630499269c9545010c2aaf3fa130f3db33da56cff5d34c187c48c48c6a0564736f6c63430008010033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:805:6",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "70:80:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "80:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "89:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "89:13:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "80:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "138:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "111:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "111:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "111:33:6"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "48:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "56:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:6",
                "type": ""
              }
            ],
            "src": "7:143:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "233:207:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "279:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "288:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "291:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "281:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "281:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "281:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "254:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "263:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "250:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "250:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "275:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "246:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "246:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "243:2:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "305:128:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "320:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "334:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "324:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "349:74:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "395:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "406:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "391:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "391:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "415:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "359:31:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "359:64:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "349:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "203:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "214:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "226:6:6",
                "type": ""
              }
            ],
            "src": "156:284:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "491:51:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "501:35:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "530:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "512:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "512:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "501:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "473:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "483:7:6",
                "type": ""
              }
            ],
            "src": "446:96:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "593:81:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "603:65:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "618:5:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "625:42:6",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "614:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "614:54:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "603:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "575:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "585:7:6",
                "type": ""
              }
            ],
            "src": "548:126:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "723:79:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "780:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "789:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "792:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "782:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "782:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "782:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "746:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "771:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "753:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "753:24:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "743:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "743:35:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "736:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "736:43:6"
                  },
                  "nodeType": "YulIf",
                  "src": "733:2:6"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "716:5:6",
                "type": ""
              }
            ],
            "src": "680:122:6"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:5436:6",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:6"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:6",
                "type": ""
              }
            ],
            "src": "7:139:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "212:77:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "222:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "237:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "231:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:13:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "222:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "277:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "253:23:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "253:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "253:30:6"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "190:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "198:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "206:5:6",
                "type": ""
              }
            ],
            "src": "152:137:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "347:87:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "357:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "379:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "366:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "366:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "357:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "422:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes32",
                      "nodeType": "YulIdentifier",
                      "src": "395:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "395:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "395:33:6"
                }
              ]
            },
            "name": "abi_decode_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "325:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "333:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "341:5:6",
                "type": ""
              }
            ],
            "src": "295:139:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "492:87:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "502:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "524:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "511:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "511:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "502:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "567:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "540:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "540:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "540:33:6"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "470:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "478:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "486:5:6",
                "type": ""
              }
            ],
            "src": "440:139:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "668:324:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "714:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "723:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "726:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "716:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "716:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "716:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "689:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "698:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "685:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "685:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "710:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "681:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "681:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "678:2:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "740:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "755:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "769:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "759:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "784:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "819:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "830:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "815:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "815:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "839:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "794:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "794:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "784:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "867:118:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "882:16:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "896:2:6",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "886:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "912:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "947:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "958:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "943:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "943:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "967:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "922:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "922:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "912:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "630:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "641:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "653:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "661:6:6",
                "type": ""
              }
            ],
            "src": "585:407:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1072:204:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1118:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1127:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1130:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1120:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1120:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1120:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1093:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1102:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1089:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1089:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1114:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1085:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1085:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1082:2:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1144:125:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1159:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1173:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1163:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1188:71:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1231:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1242:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1227:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1227:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1251:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1198:28:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1198:61:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1188:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1042:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1053:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1065:6:6",
                "type": ""
              }
            ],
            "src": "998:278:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1382:452:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1428:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1437:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1440:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1430:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1430:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1430:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1403:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1412:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1399:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1399:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1424:2:6",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1395:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1395:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1392:2:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1454:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1469:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1483:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1473:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1498:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1533:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1544:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1529:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1529:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1553:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1508:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1508:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1498:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1581:118:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1596:16:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1610:2:6",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1600:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1626:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1661:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1672:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1657:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1657:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1681:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1636:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1636:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1626:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1709:118:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1724:16:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1738:2:6",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1728:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1754:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1789:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1800:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1785:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1785:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1809:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "1764:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1764:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "1754:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_addresst_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1336:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1347:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1359:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1367:6:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1375:6:6",
                "type": ""
              }
            ],
            "src": "1282:552:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1923:324:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1969:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1978:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1981:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1971:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1971:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1971:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1944:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1953:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1940:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1940:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1965:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1936:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1936:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1933:2:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1995:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2010:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2024:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2014:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2039:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2074:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2085:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2070:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2070:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2094:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2049:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2049:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2039:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2122:118:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2137:16:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2151:2:6",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2141:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2167:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2202:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2213:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2198:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2198:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2222:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "2177:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2177:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2167:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1885:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1896:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1908:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1916:6:6",
                "type": ""
              }
            ],
            "src": "1840:407:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2318:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2335:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2358:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2340:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2340:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2328:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2328:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2328:37:6"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2306:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2313:3:6",
                "type": ""
              }
            ],
            "src": "2253:118:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2442:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2459:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2482:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2464:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2464:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2452:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2452:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2452:37:6"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2430:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2437:3:6",
                "type": ""
              }
            ],
            "src": "2377:118:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2599:124:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2609:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2621:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2632:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2617:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2617:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2609:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2689:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2702:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2713:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2698:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2698:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2645:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2645:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2645:71:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2571:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2583:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2594:4:6",
                "type": ""
              }
            ],
            "src": "2501:222:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2883:288:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2893:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2905:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2916:2:6",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2901:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2901:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2893:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2973:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2986:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2997:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2982:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2982:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2929:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2929:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2929:71:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3054:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3067:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3078:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3063:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3063:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3010:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3010:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3010:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3136:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3149:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3160:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3145:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3145:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3092:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3092:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3092:72:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2839:9:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2851:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2859:6:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2867:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2878:4:6",
                "type": ""
              }
            ],
            "src": "2729:442:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3303:206:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3313:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3325:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3336:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3321:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3321:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3313:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3393:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3406:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3417:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3402:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3402:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3349:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3349:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3349:71:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3474:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3487:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3498:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3483:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3483:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3430:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3430:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3430:72:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3267:9:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3279:6:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3287:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3298:4:6",
                "type": ""
              }
            ],
            "src": "3177:332:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3613:124:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3623:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3635:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3646:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3631:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3631:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3623:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3703:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3716:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3727:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3712:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3712:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3659:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3659:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3659:71:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3585:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3597:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3608:4:6",
                "type": ""
              }
            ],
            "src": "3515:222:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3787:261:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3797:25:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3820:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "3802:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3802:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "3797:1:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3831:25:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3854:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "3836:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3836:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "3831:1:6"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3994:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3996:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3996:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3996:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3915:1:6"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3922:66:6",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "3990:1:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3918:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3918:74:6"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3912:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3912:81:6"
                  },
                  "nodeType": "YulIf",
                  "src": "3909:2:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4026:16:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4037:1:6"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4040:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4033:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4033:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "4026:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3774:1:6",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3777:1:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "3783:3:6",
                "type": ""
              }
            ],
            "src": "3743:305:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4099:146:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4109:25:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4132:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "4114:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4114:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "4109:1:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4143:25:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4166:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "4148:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4148:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "4143:1:6"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4190:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "4192:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4192:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4192:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4184:1:6"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4187:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "4181:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4181:8:6"
                  },
                  "nodeType": "YulIf",
                  "src": "4178:2:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4222:17:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4234:1:6"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4237:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "4230:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4230:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "4222:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "4085:1:6",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "4088:1:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "4094:4:6",
                "type": ""
              }
            ],
            "src": "4054:191:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4296:51:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4306:35:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4335:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "4317:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4317:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4306:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4278:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4288:7:6",
                "type": ""
              }
            ],
            "src": "4251:96:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4395:48:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4405:32:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4430:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4423:6:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4423:13:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4416:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4416:21:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4405:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4377:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4387:7:6",
                "type": ""
              }
            ],
            "src": "4353:90:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4494:32:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4504:16:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4515:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4504:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4476:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4486:7:6",
                "type": ""
              }
            ],
            "src": "4449:77:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4577:81:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4587:65:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4602:5:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4609:42:6",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "4598:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4598:54:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4587:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4559:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4569:7:6",
                "type": ""
              }
            ],
            "src": "4532:126:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4709:32:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4719:16:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4730:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4719:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4691:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4701:7:6",
                "type": ""
              }
            ],
            "src": "4664:77:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4775:152:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4792:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4795:77:6",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4785:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4785:88:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4785:88:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4889:1:6",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4892:4:6",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4882:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4882:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4882:15:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4913:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4916:4:6",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "4906:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4906:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4906:15:6"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "4747:180:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4976:79:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5033:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5042:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5045:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5035:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5035:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5035:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4999:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5024:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "5006:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5006:24:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4996:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4996:35:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4989:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4989:43:6"
                  },
                  "nodeType": "YulIf",
                  "src": "4986:2:6"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4969:5:6",
                "type": ""
              }
            ],
            "src": "4933:122:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5101:76:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5155:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5164:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5167:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5157:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5157:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5157:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5124:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5146:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "5131:14:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5131:21:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5121:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5121:32:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5114:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5114:40:6"
                  },
                  "nodeType": "YulIf",
                  "src": "5111:2:6"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5094:5:6",
                "type": ""
              }
            ],
            "src": "5061:116:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5226:79:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5283:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5292:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5295:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5285:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5285:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5285:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5249:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5274:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bytes32",
                              "nodeType": "YulIdentifier",
                              "src": "5256:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5256:24:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5246:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5246:35:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5239:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5239:43:6"
                  },
                  "nodeType": "YulIf",
                  "src": "5236:2:6"
                }
              ]
            },
            "name": "validator_revert_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5219:5:6",
                "type": ""
              }
            ],
            "src": "5183:122:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5354:79:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5411:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5420:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5423:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5413:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5413:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5413:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5377:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5402:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "5384:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5384:24:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5374:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5374:35:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5367:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5367:43:6"
                  },
                  "nodeType": "YulIf",
                  "src": "5364:2:6"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5347:5:6",
                "type": ""
              }
            ],
            "src": "5311:122:6"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_bytes32(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_bytes32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "234:2558:5:-:0;;;304:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;354:5;337:14;;:22;;;;;;;;;;;;;;;;;;304:60;234:2558;;7:143:6;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:284::-;;275:2;263:9;254:7;250:23;246:32;243:2;;;291:1;288;281:12;243:2;334:1;359:64;415:7;406:6;395:9;391:22;359:64;:::i;:::-;349:74;;305:128;233:207;;;;:::o;446:96::-;;512:24;530:5;512:24;:::i;:::-;501:35;;491:51;;;:::o;548:126::-;;625:42;618:5;614:54;603:65;;593:81;;;:::o;680:122::-;753:24;771:5;753:24;:::i;:::-;746:5;743:35;733:2;;792:1;789;782:12;733:2;723:79;:::o;234:2558:5:-;;;;;;;",
  "deployedSourceMap": "234:2558:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2635:155;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2307:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1919:279;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;792:267;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1327:253;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2635:155;2731:7;2754:6;:14;2761:6;2754:14;;;;;;;;;;;;;;;:31;2769:15;2754:31;;;;;;;;;;;;2746:39;;2635:155;;;;:::o;2307:98::-;2364:7;2386:14;;;;;;;;;;;2379:21;;2307:98;:::o;1919:279::-;2057:6;2018;:18;2025:10;2018:18;;;;;;;;;;;;;;;:35;2037:15;2018:35;;;;;;;;;;;;:45;;;;;;;:::i;:::-;;;;;;;;2109:6;2069;:19;2076:11;2069:19;;;;;;;;;;;;;;;:36;2089:15;2069:36;;;;;;;;;;;;:46;;;;;;;:::i;:::-;;;;;;;;2177:15;2164:11;2126:67;;2144:10;2126:67;;;2156:6;2126:67;;;;;;:::i;:::-;;;;;;;;1919:279;;;:::o;792:267::-;876:14;;;;;;;;;;869:35;;;905:10;925:4;932:6;869:70;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;861:79;;;;;;985:6;946;:18;953:10;946:18;;;;;;;;;;;;;;;:35;965:15;946:35;;;;;;;;;;;;:45;;;;;;;:::i;:::-;;;;;;;;1038:15;1018:10;1002:52;;;1030:6;1002:52;;;;;;:::i;:::-;;;;;;;;792:267;;:::o;1327:253::-;1442:6;1403;:18;1410:10;1403:18;;;;;;;;;;;;;;;:35;1422:15;1403:35;;;;;;;;;;;;:45;;;;;;;:::i;:::-;;;;;;;;1469:14;;;;;;;;;;1462:31;;;1494:10;1506:6;1462:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1454:60;;;;;;1559:15;1539:10;1525:50;;;1551:6;1525:50;;;;;;:::i;:::-;;;;;;;;1327:253;;:::o;7:139:6:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;212:77;;;;:::o;295:139::-;;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;347:87;;;;:::o;440:139::-;;524:6;511:20;502:29;;540:33;567:5;540:33;:::i;:::-;492:87;;;;:::o;585:407::-;;;710:2;698:9;689:7;685:23;681:32;678:2;;;726:1;723;716:12;678:2;769:1;794:53;839:7;830:6;819:9;815:22;794:53;:::i;:::-;784:63;;740:117;896:2;922:53;967:7;958:6;947:9;943:22;922:53;:::i;:::-;912:63;;867:118;668:324;;;;;:::o;998:278::-;;1114:2;1102:9;1093:7;1089:23;1085:32;1082:2;;;1130:1;1127;1120:12;1082:2;1173:1;1198:61;1251:7;1242:6;1231:9;1227:22;1198:61;:::i;:::-;1188:71;;1144:125;1072:204;;;;:::o;1282:552::-;;;;1424:2;1412:9;1403:7;1399:23;1395:32;1392:2;;;1440:1;1437;1430:12;1392:2;1483:1;1508:53;1553:7;1544:6;1533:9;1529:22;1508:53;:::i;:::-;1498:63;;1454:117;1610:2;1636:53;1681:7;1672:6;1661:9;1657:22;1636:53;:::i;:::-;1626:63;;1581:118;1738:2;1764:53;1809:7;1800:6;1789:9;1785:22;1764:53;:::i;:::-;1754:63;;1709:118;1382:452;;;;;:::o;1840:407::-;;;1965:2;1953:9;1944:7;1940:23;1936:32;1933:2;;;1981:1;1978;1971:12;1933:2;2024:1;2049:53;2094:7;2085:6;2074:9;2070:22;2049:53;:::i;:::-;2039:63;;1995:117;2151:2;2177:53;2222:7;2213:6;2202:9;2198:22;2177:53;:::i;:::-;2167:63;;2122:118;1923:324;;;;;:::o;2253:118::-;2340:24;2358:5;2340:24;:::i;:::-;2335:3;2328:37;2318:53;;:::o;2377:118::-;2464:24;2482:5;2464:24;:::i;:::-;2459:3;2452:37;2442:53;;:::o;2501:222::-;;2632:2;2621:9;2617:18;2609:26;;2645:71;2713:1;2702:9;2698:17;2689:6;2645:71;:::i;:::-;2599:124;;;;:::o;2729:442::-;;2916:2;2905:9;2901:18;2893:26;;2929:71;2997:1;2986:9;2982:17;2973:6;2929:71;:::i;:::-;3010:72;3078:2;3067:9;3063:18;3054:6;3010:72;:::i;:::-;3092;3160:2;3149:9;3145:18;3136:6;3092:72;:::i;:::-;2883:288;;;;;;:::o;3177:332::-;;3336:2;3325:9;3321:18;3313:26;;3349:71;3417:1;3406:9;3402:17;3393:6;3349:71;:::i;:::-;3430:72;3498:2;3487:9;3483:18;3474:6;3430:72;:::i;:::-;3303:206;;;;;:::o;3515:222::-;;3646:2;3635:9;3631:18;3623:26;;3659:71;3727:1;3716:9;3712:17;3703:6;3659:71;:::i;:::-;3613:124;;;;:::o;3743:305::-;;3802:20;3820:1;3802:20;:::i;:::-;3797:25;;3836:20;3854:1;3836:20;:::i;:::-;3831:25;;3990:1;3922:66;3918:74;3915:1;3912:81;3909:2;;;3996:18;;:::i;:::-;3909:2;4040:1;4037;4033:9;4026:16;;3787:261;;;;:::o;4054:191::-;;4114:20;4132:1;4114:20;:::i;:::-;4109:25;;4148:20;4166:1;4148:20;:::i;:::-;4143:25;;4187:1;4184;4181:8;4178:2;;;4192:18;;:::i;:::-;4178:2;4237:1;4234;4230:9;4222:17;;4099:146;;;;:::o;4251:96::-;;4317:24;4335:5;4317:24;:::i;:::-;4306:35;;4296:51;;;:::o;4353:90::-;;4430:5;4423:13;4416:21;4405:32;;4395:48;;;:::o;4449:77::-;;4515:5;4504:16;;4494:32;;;:::o;4532:126::-;;4609:42;4602:5;4598:54;4587:65;;4577:81;;;:::o;4664:77::-;;4730:5;4719:16;;4709:32;;;:::o;4747:180::-;4795:77;4792:1;4785:88;4892:4;4889:1;4882:15;4916:4;4913:1;4906:15;4933:122;5006:24;5024:5;5006:24;:::i;:::-;4999:5;4996:35;4986:2;;5045:1;5042;5035:12;4986:2;4976:79;:::o;5061:116::-;5131:21;5146:5;5131:21;:::i;:::-;5124:5;5121:32;5111:2;;5167:1;5164;5157:12;5111:2;5101:76;:::o;5183:122::-;5256:24;5274:5;5256:24;:::i;:::-;5249:5;5246:35;5236:2;;5295:1;5292;5285:12;5236:2;5226:79;:::o;5311:122::-;5384:24;5402:5;5384:24;:::i;:::-;5377:5;5374:35;5364:2;;5423:1;5420;5413:12;5364:2;5354:79;:::o",
  "source": "\n//SPDX-License-Identifier: MIT\npragma solidity 0.8.1;\n\nimport \"./IERC20.sol\";\nimport \"./IStake.sol\";\n\n/// @title ERC20 Staking Bridge\n/// @author Vega Protocol\n/// @notice This contract manages the vesting of the Vega V2 ERC20 token\ncontract Vega_Staking_Bridge is IStake {\n  address _staking_token;\n\n  constructor(address token) {\n    _staking_token = token;\n  }\n\n  /// @dev user => amount staked\n  mapping(address => mapping(bytes32 => uint256)) stakes;\n\n  /// @notice This stakes the given amount of tokens and credits them to the provided Vega public key\n  /// @param amount Token amount to stake\n  /// @param vega_public_key Target Vega public key to be credited with the stake\n  /// @dev Emits Stake_Deposited event\n  /// @dev User MUST run \"approve\" on token prior to running Stake\n  function stake(uint256 amount, bytes32 vega_public_key) public {\n    require(IERC20(_staking_token).transferFrom(msg.sender, address(this), amount));\n    stakes[msg.sender][vega_public_key] += amount;\n    emit Stake_Deposited(msg.sender, amount, vega_public_key);\n  }\n\n  /// @notice This removes specified amount of stake of available to user\n  /// @dev Emits Stake_Removed event if successful\n  /// @param amount Amount of tokens to remove from staking\n  /// @param vega_public_key Target Vega public key from which to deduct stake\n  function remove_stake(uint256 amount, bytes32 vega_public_key) public {\n    stakes[msg.sender][vega_public_key] -= amount;\n    require(IERC20(_staking_token).transfer(msg.sender, amount));\n    emit Stake_Removed(msg.sender, amount, vega_public_key);\n  }\n\n  /// @notice This transfers all stake from the sender's address to the \"new_address\"\n  /// @dev Emits Stake_Transfered event if successful\n  /// @param amount Stake amount to transfer\n  /// @param new_address Target ETH address to recieve the stake\n  /// @param vega_public_key Target Vega public key to be credited with the transfer\n  function transfer_stake(uint256 amount, address new_address, bytes32 vega_public_key) public {\n    stakes[msg.sender][vega_public_key] -= amount;\n    stakes[new_address][vega_public_key] += amount;\n    emit Stake_Transferred(msg.sender, amount, new_address, vega_public_key);\n  }\n\n  /// @dev This is IStake.staking_token\n  /// @return the address of the token that is able to be staked\n  function staking_token() external override view returns (address) {\n    return _staking_token;\n  }\n\n  /// @dev This is IStake.stake_balance\n  /// @param target Target address to check\n  /// @param vega_public_key Target vega public key to check\n  /// @return the number of tokens staked for that address->vega_public_key pair\n  function stake_balance(address target, bytes32 vega_public_key) external override view returns (uint256) {\n    return  stakes[target][vega_public_key];\n  }\n}\n\n\n/**\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\nMMMMWEMMMMMMMMMMMMMMMMMMMMMMMMMM...............MMMMMMMMMMMMM\nMMMMMMLOVEMMMMMMMMMMMMMMMMMMMMMM...............MMMMMMMMMMMMM\nMMMMMMMMMMHIXELMMMMMMMMMMMM....................MMMMMNNMMMMMM\nMMMMMMMMMMMMMMMMMMMMMMMMMMM....................MMMMMMMMMMMMM\nMMMMMMMMMMMMMMMMMMMMMM88=........................+MMMMMMMMMM\nMMMMMMMMMMMMMMMMM....................MMMMM...MMMMMMMMMMMMMMM\nMMMMMMMMMMMMMMMMM....................MMMMM...MMMMMMMMMMMMMMM\nMMMMMMMMMMMM.........................MM+..MMM....+MMMMMMMMMM\nMMMMMMMMMNMM...................... ..MM?..MMM.. .+MMMMMMMMMM\nMMMMNDDMM+........................+MM........MM..+MMMMMMMMMM\nMMMMZ.............................+MM....................MMM\nMMMMZ.............................+MM....................MMM\nMMMMZ.............................+MM....................DDD\nMMMMZ.............................+MM..ZMMMMMMMMMMMMMMMMMMMM\nMMMMZ.............................+MM..ZMMMMMMMMMMMMMMMMMMMM\nMM..............................MMZ....ZMMMMMMMMMMMMMMMMMMMM\nMM............................MM.......ZMMMMMMMMMMMMMMMMMMMM\nMM............................MM.......ZMMMMMMMMMMMMMMMMMMMM\nMM......................ZMMMMM.......MMMMMMMMMMMMMMMMMMMMMMM\nMM............... ......ZMMMMM.... ..MMMMMMMMMMMMMMMMMMMMMMM\nMM...............MMMMM88~.........+MM..ZMMMMMMMMMMMMMMMMMMMM\nMM.......$DDDDDDD.......$DDDDD..DDNMM..ZMMMMMMMMMMMMMMMMMMMM\nMM.......$DDDDDDD.......$DDDDD..DDNMM..ZMMMMMMMMMMMMMMMMMMMM\nMM.......ZMMMMMMM.......ZMMMMM..MMMMM..ZMMMMMMMMMMMMMMMMMMMM\nMMMMMMMMM+.......MMMMM88NMMMMM..MMMMMMMMMMMMMMMMMMMMMMMMMMMM\nMMMMMMMMM+.......MMMMM88NMMMMM..MMMMMMMMMMMMMMMMMMMMMMMMMMMM\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM*/\n",
  "sourcePath": "/home/danny/source/vega/Staking_Bridge/Staking_Bridge/contracts/Vega_Staking_Bridge.sol",
  "ast": {
    "absolutePath": "/home/danny/source/vega/Staking_Bridge/Staking_Bridge/contracts/Vega_Staking_Bridge.sol",
    "exportedSymbols": {
      "IERC20": [
        585
      ],
      "IStake": [
        631
      ],
      "Vega_Staking_Bridge": [
        915
      ]
    },
    "id": 916,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 750,
        "literals": [
          "solidity",
          "0.8",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:5"
      },
      {
        "absolutePath": "/home/danny/source/vega/Staking_Bridge/Staking_Bridge/contracts/IERC20.sol",
        "file": "./IERC20.sol",
        "id": 751,
        "nodeType": "ImportDirective",
        "scope": 916,
        "sourceUnit": 586,
        "src": "56:22:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/danny/source/vega/Staking_Bridge/Staking_Bridge/contracts/IStake.sol",
        "file": "./IStake.sol",
        "id": 752,
        "nodeType": "ImportDirective",
        "scope": 916,
        "sourceUnit": 632,
        "src": "79:22:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 754,
              "name": "IStake",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 631,
              "src": "266:6:5"
            },
            "id": 755,
            "nodeType": "InheritanceSpecifier",
            "src": "266:6:5"
          }
        ],
        "contractDependencies": [
          631
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 753,
          "nodeType": "StructuredDocumentation",
          "src": "103:131:5",
          "text": "@title ERC20 Staking Bridge\n @author Vega Protocol\n @notice This contract manages the vesting of the Vega V2 ERC20 token"
        },
        "fullyImplemented": true,
        "id": 915,
        "linearizedBaseContracts": [
          915,
          631
        ],
        "name": "Vega_Staking_Bridge",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 757,
            "mutability": "mutable",
            "name": "_staking_token",
            "nodeType": "VariableDeclaration",
            "scope": 915,
            "src": "277:22:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 756,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "277:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 766,
              "nodeType": "Block",
              "src": "331:33:5",
              "statements": [
                {
                  "expression": {
                    "id": 764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 762,
                      "name": "_staking_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 757,
                      "src": "337:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 763,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 759,
                      "src": "354:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "337:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 765,
                  "nodeType": "ExpressionStatement",
                  "src": "337:22:5"
                }
              ]
            },
            "id": 767,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 760,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 759,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 767,
                  "src": "316:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 758,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "316:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "315:15:5"
            },
            "returnParameters": {
              "id": 761,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "331:0:5"
            },
            "scope": 915,
            "src": "304:60:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 768,
              "nodeType": "StructuredDocumentation",
              "src": "368:30:5",
              "text": "@dev user => amount staked"
            },
            "id": 774,
            "mutability": "mutable",
            "name": "stakes",
            "nodeType": "VariableDeclaration",
            "scope": 915,
            "src": "401:54:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(bytes32 => uint256))"
            },
            "typeName": {
              "id": 773,
              "keyType": {
                "id": 769,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "409:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "401:47:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(bytes32 => uint256))"
              },
              "valueType": {
                "id": 772,
                "keyType": {
                  "id": 770,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "428:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "nodeType": "Mapping",
                "src": "420:27:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                  "typeString": "mapping(bytes32 => uint256)"
                },
                "valueType": {
                  "id": 771,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "439:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 813,
              "nodeType": "Block",
              "src": "855:204:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 787,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "905:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 788,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "905:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 791,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "925:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vega_Staking_Bridge_$915",
                                  "typeString": "contract Vega_Staking_Bridge"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Vega_Staking_Bridge_$915",
                                  "typeString": "contract Vega_Staking_Bridge"
                                }
                              ],
                              "id": 790,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "917:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 789,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "917:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 792,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "917:13:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 793,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 777,
                            "src": "932:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 784,
                                "name": "_staking_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 757,
                                "src": "876:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 783,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 585,
                              "src": "869:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$585_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 785,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "869:22:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$585",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 566,
                          "src": "869:35:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "869:70:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 782,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "861:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "861:79:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 796,
                  "nodeType": "ExpressionStatement",
                  "src": "861:79:5"
                },
                {
                  "expression": {
                    "id": 804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 797,
                          "name": "stakes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 774,
                          "src": "946:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(bytes32 => uint256))"
                          }
                        },
                        "id": 801,
                        "indexExpression": {
                          "expression": {
                            "id": 798,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "953:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "953:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "946:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 802,
                      "indexExpression": {
                        "id": 800,
                        "name": "vega_public_key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 779,
                        "src": "965:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "946:35:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 803,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 777,
                      "src": "985:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "946:45:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 805,
                  "nodeType": "ExpressionStatement",
                  "src": "946:45:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 807,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1018:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1018:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 809,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 777,
                        "src": "1030:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 810,
                        "name": "vega_public_key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 779,
                        "src": "1038:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 806,
                      "name": "Stake_Deposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 596,
                      "src": "1002:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,uint256,bytes32)"
                      }
                    },
                    "id": 811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1002:52:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 812,
                  "nodeType": "EmitStatement",
                  "src": "997:57:5"
                }
              ]
            },
            "documentation": {
              "id": 775,
              "nodeType": "StructuredDocumentation",
              "src": "460:329:5",
              "text": "@notice This stakes the given amount of tokens and credits them to the provided Vega public key\n @param amount Token amount to stake\n @param vega_public_key Target Vega public key to be credited with the stake\n @dev Emits Stake_Deposited event\n @dev User MUST run \"approve\" on token prior to running Stake"
            },
            "functionSelector": "83c592cf",
            "id": 814,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 777,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 814,
                  "src": "807:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 776,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "807:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 779,
                  "mutability": "mutable",
                  "name": "vega_public_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 814,
                  "src": "823:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 778,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "823:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "806:41:5"
            },
            "returnParameters": {
              "id": 781,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "855:0:5"
            },
            "scope": 915,
            "src": "792:267:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 849,
              "nodeType": "Block",
              "src": "1397:183:5",
              "statements": [
                {
                  "expression": {
                    "id": 829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 822,
                          "name": "stakes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 774,
                          "src": "1403:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(bytes32 => uint256))"
                          }
                        },
                        "id": 826,
                        "indexExpression": {
                          "expression": {
                            "id": 823,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1410:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1410:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1403:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 827,
                      "indexExpression": {
                        "id": 825,
                        "name": "vega_public_key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 819,
                        "src": "1422:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1403:35:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 828,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 817,
                      "src": "1442:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1403:45:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 830,
                  "nodeType": "ExpressionStatement",
                  "src": "1403:45:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 836,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1494:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 837,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1494:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 838,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 817,
                            "src": "1506:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 833,
                                "name": "_staking_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 757,
                                "src": "1469:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 832,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 585,
                              "src": "1462:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$585_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 834,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1462:22:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$585",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 534,
                          "src": "1462:31:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1462:51:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 831,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1454:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1454:60:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 841,
                  "nodeType": "ExpressionStatement",
                  "src": "1454:60:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 843,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1539:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1539:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 845,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 817,
                        "src": "1551:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 846,
                        "name": "vega_public_key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 819,
                        "src": "1559:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 842,
                      "name": "Stake_Removed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 604,
                      "src": "1525:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,uint256,bytes32)"
                      }
                    },
                    "id": 847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1525:50:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 848,
                  "nodeType": "EmitStatement",
                  "src": "1520:55:5"
                }
              ]
            },
            "documentation": {
              "id": 815,
              "nodeType": "StructuredDocumentation",
              "src": "1063:261:5",
              "text": "@notice This removes specified amount of stake of available to user\n @dev Emits Stake_Removed event if successful\n @param amount Amount of tokens to remove from staking\n @param vega_public_key Target Vega public key from which to deduct stake"
            },
            "functionSelector": "dd01ba0b",
            "id": 850,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "remove_stake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 820,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 817,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 850,
                  "src": "1349:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 816,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1349:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 819,
                  "mutability": "mutable",
                  "name": "vega_public_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 850,
                  "src": "1365:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 818,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1365:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1348:41:5"
            },
            "returnParameters": {
              "id": 821,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1397:0:5"
            },
            "scope": 915,
            "src": "1327:253:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 885,
              "nodeType": "Block",
              "src": "2012:186:5",
              "statements": [
                {
                  "expression": {
                    "id": 867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 860,
                          "name": "stakes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 774,
                          "src": "2018:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(bytes32 => uint256))"
                          }
                        },
                        "id": 864,
                        "indexExpression": {
                          "expression": {
                            "id": 861,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2025:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2025:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2018:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 865,
                      "indexExpression": {
                        "id": 863,
                        "name": "vega_public_key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 857,
                        "src": "2037:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2018:35:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 866,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 853,
                      "src": "2057:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2018:45:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 868,
                  "nodeType": "ExpressionStatement",
                  "src": "2018:45:5"
                },
                {
                  "expression": {
                    "id": 875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 869,
                          "name": "stakes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 774,
                          "src": "2069:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(bytes32 => uint256))"
                          }
                        },
                        "id": 872,
                        "indexExpression": {
                          "id": 870,
                          "name": "new_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 855,
                          "src": "2076:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2069:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 873,
                      "indexExpression": {
                        "id": 871,
                        "name": "vega_public_key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 857,
                        "src": "2089:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2069:36:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 874,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 853,
                      "src": "2109:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2069:46:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 876,
                  "nodeType": "ExpressionStatement",
                  "src": "2069:46:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 878,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2144:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2144:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 880,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 853,
                        "src": "2156:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 881,
                        "name": "new_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 855,
                        "src": "2164:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 882,
                        "name": "vega_public_key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 857,
                        "src": "2177:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 877,
                      "name": "Stake_Transferred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 614,
                      "src": "2126:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,uint256,address,bytes32)"
                      }
                    },
                    "id": 883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2126:67:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 884,
                  "nodeType": "EmitStatement",
                  "src": "2121:72:5"
                }
              ]
            },
            "documentation": {
              "id": 851,
              "nodeType": "StructuredDocumentation",
              "src": "1584:332:5",
              "text": "@notice This transfers all stake from the sender's address to the \"new_address\"\n @dev Emits Stake_Transfered event if successful\n @param amount Stake amount to transfer\n @param new_address Target ETH address to recieve the stake\n @param vega_public_key Target Vega public key to be credited with the transfer"
            },
            "functionSelector": "48c66e13",
            "id": 886,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer_stake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 858,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 853,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 886,
                  "src": "1943:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 852,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1943:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 855,
                  "mutability": "mutable",
                  "name": "new_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 886,
                  "src": "1959:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 854,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1959:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 857,
                  "mutability": "mutable",
                  "name": "vega_public_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 886,
                  "src": "1980:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 856,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1980:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1942:62:5"
            },
            "returnParameters": {
              "id": 859,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2012:0:5"
            },
            "scope": 915,
            "src": "1919:279:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              620
            ],
            "body": {
              "id": 895,
              "nodeType": "Block",
              "src": "2373:32:5",
              "statements": [
                {
                  "expression": {
                    "id": 893,
                    "name": "_staking_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 757,
                    "src": "2386:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 892,
                  "id": 894,
                  "nodeType": "Return",
                  "src": "2379:21:5"
                }
              ]
            },
            "documentation": {
              "id": 887,
              "nodeType": "StructuredDocumentation",
              "src": "2202:102:5",
              "text": "@dev This is IStake.staking_token\n @return the address of the token that is able to be staked"
            },
            "functionSelector": "2dc7d74c",
            "id": 896,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "staking_token",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 889,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2341:8:5"
            },
            "parameters": {
              "id": 888,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2329:2:5"
            },
            "returnParameters": {
              "id": 892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 891,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "2364:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 890,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2364:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2363:9:5"
            },
            "scope": 915,
            "src": "2307:98:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              630
            ],
            "body": {
              "id": 913,
              "nodeType": "Block",
              "src": "2740:50:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 907,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 774,
                        "src": "2754:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(bytes32 => uint256))"
                        }
                      },
                      "id": 909,
                      "indexExpression": {
                        "id": 908,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 899,
                        "src": "2761:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2754:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                        "typeString": "mapping(bytes32 => uint256)"
                      }
                    },
                    "id": 911,
                    "indexExpression": {
                      "id": 910,
                      "name": "vega_public_key",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 901,
                      "src": "2769:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2754:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 906,
                  "id": 912,
                  "nodeType": "Return",
                  "src": "2746:39:5"
                }
              ]
            },
            "documentation": {
              "id": 897,
              "nodeType": "StructuredDocumentation",
              "src": "2409:223:5",
              "text": "@dev This is IStake.stake_balance\n @param target Target address to check\n @param vega_public_key Target vega public key to check\n @return the number of tokens staked for that address->vega_public_key pair"
            },
            "functionSelector": "274abf34",
            "id": 914,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stake_balance",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 903,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2708:8:5"
            },
            "parameters": {
              "id": 902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 899,
                  "mutability": "mutable",
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 914,
                  "src": "2658:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 898,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2658:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 901,
                  "mutability": "mutable",
                  "name": "vega_public_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 914,
                  "src": "2674:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 900,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2674:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2657:41:5"
            },
            "returnParameters": {
              "id": 906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 905,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 914,
                  "src": "2731:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 904,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2731:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2730:9:5"
            },
            "scope": 915,
            "src": "2635:155:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 916,
        "src": "234:2558:5"
      }
    ],
    "src": "32:4599:5"
  },
  "legacyAST": {
    "absolutePath": "/home/danny/source/vega/Staking_Bridge/Staking_Bridge/contracts/Vega_Staking_Bridge.sol",
    "exportedSymbols": {
      "IERC20": [
        585
      ],
      "IStake": [
        631
      ],
      "Vega_Staking_Bridge": [
        915
      ]
    },
    "id": 916,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 750,
        "literals": [
          "solidity",
          "0.8",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:5"
      },
      {
        "absolutePath": "/home/danny/source/vega/Staking_Bridge/Staking_Bridge/contracts/IERC20.sol",
        "file": "./IERC20.sol",
        "id": 751,
        "nodeType": "ImportDirective",
        "scope": 916,
        "sourceUnit": 586,
        "src": "56:22:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/danny/source/vega/Staking_Bridge/Staking_Bridge/contracts/IStake.sol",
        "file": "./IStake.sol",
        "id": 752,
        "nodeType": "ImportDirective",
        "scope": 916,
        "sourceUnit": 632,
        "src": "79:22:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 754,
              "name": "IStake",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 631,
              "src": "266:6:5"
            },
            "id": 755,
            "nodeType": "InheritanceSpecifier",
            "src": "266:6:5"
          }
        ],
        "contractDependencies": [
          631
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 753,
          "nodeType": "StructuredDocumentation",
          "src": "103:131:5",
          "text": "@title ERC20 Staking Bridge\n @author Vega Protocol\n @notice This contract manages the vesting of the Vega V2 ERC20 token"
        },
        "fullyImplemented": true,
        "id": 915,
        "linearizedBaseContracts": [
          915,
          631
        ],
        "name": "Vega_Staking_Bridge",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 757,
            "mutability": "mutable",
            "name": "_staking_token",
            "nodeType": "VariableDeclaration",
            "scope": 915,
            "src": "277:22:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 756,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "277:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 766,
              "nodeType": "Block",
              "src": "331:33:5",
              "statements": [
                {
                  "expression": {
                    "id": 764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 762,
                      "name": "_staking_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 757,
                      "src": "337:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 763,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 759,
                      "src": "354:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "337:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 765,
                  "nodeType": "ExpressionStatement",
                  "src": "337:22:5"
                }
              ]
            },
            "id": 767,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 760,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 759,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 767,
                  "src": "316:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 758,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "316:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "315:15:5"
            },
            "returnParameters": {
              "id": 761,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "331:0:5"
            },
            "scope": 915,
            "src": "304:60:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 768,
              "nodeType": "StructuredDocumentation",
              "src": "368:30:5",
              "text": "@dev user => amount staked"
            },
            "id": 774,
            "mutability": "mutable",
            "name": "stakes",
            "nodeType": "VariableDeclaration",
            "scope": 915,
            "src": "401:54:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(bytes32 => uint256))"
            },
            "typeName": {
              "id": 773,
              "keyType": {
                "id": 769,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "409:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "401:47:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(bytes32 => uint256))"
              },
              "valueType": {
                "id": 772,
                "keyType": {
                  "id": 770,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "428:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "nodeType": "Mapping",
                "src": "420:27:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                  "typeString": "mapping(bytes32 => uint256)"
                },
                "valueType": {
                  "id": 771,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "439:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 813,
              "nodeType": "Block",
              "src": "855:204:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 787,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "905:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 788,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "905:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 791,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "925:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vega_Staking_Bridge_$915",
                                  "typeString": "contract Vega_Staking_Bridge"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Vega_Staking_Bridge_$915",
                                  "typeString": "contract Vega_Staking_Bridge"
                                }
                              ],
                              "id": 790,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "917:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 789,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "917:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 792,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "917:13:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 793,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 777,
                            "src": "932:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 784,
                                "name": "_staking_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 757,
                                "src": "876:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 783,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 585,
                              "src": "869:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$585_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 785,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "869:22:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$585",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 566,
                          "src": "869:35:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "869:70:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 782,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "861:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "861:79:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 796,
                  "nodeType": "ExpressionStatement",
                  "src": "861:79:5"
                },
                {
                  "expression": {
                    "id": 804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 797,
                          "name": "stakes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 774,
                          "src": "946:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(bytes32 => uint256))"
                          }
                        },
                        "id": 801,
                        "indexExpression": {
                          "expression": {
                            "id": 798,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "953:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "953:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "946:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 802,
                      "indexExpression": {
                        "id": 800,
                        "name": "vega_public_key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 779,
                        "src": "965:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "946:35:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 803,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 777,
                      "src": "985:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "946:45:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 805,
                  "nodeType": "ExpressionStatement",
                  "src": "946:45:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 807,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1018:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1018:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 809,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 777,
                        "src": "1030:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 810,
                        "name": "vega_public_key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 779,
                        "src": "1038:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 806,
                      "name": "Stake_Deposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 596,
                      "src": "1002:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,uint256,bytes32)"
                      }
                    },
                    "id": 811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1002:52:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 812,
                  "nodeType": "EmitStatement",
                  "src": "997:57:5"
                }
              ]
            },
            "documentation": {
              "id": 775,
              "nodeType": "StructuredDocumentation",
              "src": "460:329:5",
              "text": "@notice This stakes the given amount of tokens and credits them to the provided Vega public key\n @param amount Token amount to stake\n @param vega_public_key Target Vega public key to be credited with the stake\n @dev Emits Stake_Deposited event\n @dev User MUST run \"approve\" on token prior to running Stake"
            },
            "functionSelector": "83c592cf",
            "id": 814,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 777,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 814,
                  "src": "807:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 776,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "807:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 779,
                  "mutability": "mutable",
                  "name": "vega_public_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 814,
                  "src": "823:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 778,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "823:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "806:41:5"
            },
            "returnParameters": {
              "id": 781,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "855:0:5"
            },
            "scope": 915,
            "src": "792:267:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 849,
              "nodeType": "Block",
              "src": "1397:183:5",
              "statements": [
                {
                  "expression": {
                    "id": 829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 822,
                          "name": "stakes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 774,
                          "src": "1403:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(bytes32 => uint256))"
                          }
                        },
                        "id": 826,
                        "indexExpression": {
                          "expression": {
                            "id": 823,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1410:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1410:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1403:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 827,
                      "indexExpression": {
                        "id": 825,
                        "name": "vega_public_key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 819,
                        "src": "1422:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1403:35:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 828,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 817,
                      "src": "1442:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1403:45:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 830,
                  "nodeType": "ExpressionStatement",
                  "src": "1403:45:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 836,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1494:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 837,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1494:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 838,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 817,
                            "src": "1506:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 833,
                                "name": "_staking_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 757,
                                "src": "1469:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 832,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 585,
                              "src": "1462:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$585_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 834,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1462:22:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$585",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 534,
                          "src": "1462:31:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1462:51:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 831,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1454:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1454:60:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 841,
                  "nodeType": "ExpressionStatement",
                  "src": "1454:60:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 843,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1539:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1539:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 845,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 817,
                        "src": "1551:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 846,
                        "name": "vega_public_key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 819,
                        "src": "1559:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 842,
                      "name": "Stake_Removed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 604,
                      "src": "1525:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,uint256,bytes32)"
                      }
                    },
                    "id": 847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1525:50:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 848,
                  "nodeType": "EmitStatement",
                  "src": "1520:55:5"
                }
              ]
            },
            "documentation": {
              "id": 815,
              "nodeType": "StructuredDocumentation",
              "src": "1063:261:5",
              "text": "@notice This removes specified amount of stake of available to user\n @dev Emits Stake_Removed event if successful\n @param amount Amount of tokens to remove from staking\n @param vega_public_key Target Vega public key from which to deduct stake"
            },
            "functionSelector": "dd01ba0b",
            "id": 850,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "remove_stake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 820,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 817,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 850,
                  "src": "1349:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 816,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1349:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 819,
                  "mutability": "mutable",
                  "name": "vega_public_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 850,
                  "src": "1365:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 818,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1365:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1348:41:5"
            },
            "returnParameters": {
              "id": 821,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1397:0:5"
            },
            "scope": 915,
            "src": "1327:253:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 885,
              "nodeType": "Block",
              "src": "2012:186:5",
              "statements": [
                {
                  "expression": {
                    "id": 867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 860,
                          "name": "stakes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 774,
                          "src": "2018:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(bytes32 => uint256))"
                          }
                        },
                        "id": 864,
                        "indexExpression": {
                          "expression": {
                            "id": 861,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2025:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2025:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2018:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 865,
                      "indexExpression": {
                        "id": 863,
                        "name": "vega_public_key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 857,
                        "src": "2037:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2018:35:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 866,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 853,
                      "src": "2057:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2018:45:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 868,
                  "nodeType": "ExpressionStatement",
                  "src": "2018:45:5"
                },
                {
                  "expression": {
                    "id": 875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 869,
                          "name": "stakes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 774,
                          "src": "2069:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(bytes32 => uint256))"
                          }
                        },
                        "id": 872,
                        "indexExpression": {
                          "id": 870,
                          "name": "new_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 855,
                          "src": "2076:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2069:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 873,
                      "indexExpression": {
                        "id": 871,
                        "name": "vega_public_key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 857,
                        "src": "2089:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2069:36:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 874,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 853,
                      "src": "2109:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2069:46:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 876,
                  "nodeType": "ExpressionStatement",
                  "src": "2069:46:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 878,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2144:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2144:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 880,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 853,
                        "src": "2156:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 881,
                        "name": "new_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 855,
                        "src": "2164:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 882,
                        "name": "vega_public_key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 857,
                        "src": "2177:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 877,
                      "name": "Stake_Transferred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 614,
                      "src": "2126:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,uint256,address,bytes32)"
                      }
                    },
                    "id": 883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2126:67:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 884,
                  "nodeType": "EmitStatement",
                  "src": "2121:72:5"
                }
              ]
            },
            "documentation": {
              "id": 851,
              "nodeType": "StructuredDocumentation",
              "src": "1584:332:5",
              "text": "@notice This transfers all stake from the sender's address to the \"new_address\"\n @dev Emits Stake_Transfered event if successful\n @param amount Stake amount to transfer\n @param new_address Target ETH address to recieve the stake\n @param vega_public_key Target Vega public key to be credited with the transfer"
            },
            "functionSelector": "48c66e13",
            "id": 886,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer_stake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 858,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 853,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 886,
                  "src": "1943:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 852,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1943:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 855,
                  "mutability": "mutable",
                  "name": "new_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 886,
                  "src": "1959:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 854,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1959:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 857,
                  "mutability": "mutable",
                  "name": "vega_public_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 886,
                  "src": "1980:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 856,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1980:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1942:62:5"
            },
            "returnParameters": {
              "id": 859,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2012:0:5"
            },
            "scope": 915,
            "src": "1919:279:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              620
            ],
            "body": {
              "id": 895,
              "nodeType": "Block",
              "src": "2373:32:5",
              "statements": [
                {
                  "expression": {
                    "id": 893,
                    "name": "_staking_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 757,
                    "src": "2386:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 892,
                  "id": 894,
                  "nodeType": "Return",
                  "src": "2379:21:5"
                }
              ]
            },
            "documentation": {
              "id": 887,
              "nodeType": "StructuredDocumentation",
              "src": "2202:102:5",
              "text": "@dev This is IStake.staking_token\n @return the address of the token that is able to be staked"
            },
            "functionSelector": "2dc7d74c",
            "id": 896,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "staking_token",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 889,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2341:8:5"
            },
            "parameters": {
              "id": 888,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2329:2:5"
            },
            "returnParameters": {
              "id": 892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 891,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "2364:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 890,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2364:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2363:9:5"
            },
            "scope": 915,
            "src": "2307:98:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              630
            ],
            "body": {
              "id": 913,
              "nodeType": "Block",
              "src": "2740:50:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 907,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 774,
                        "src": "2754:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(bytes32 => uint256))"
                        }
                      },
                      "id": 909,
                      "indexExpression": {
                        "id": 908,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 899,
                        "src": "2761:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2754:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                        "typeString": "mapping(bytes32 => uint256)"
                      }
                    },
                    "id": 911,
                    "indexExpression": {
                      "id": 910,
                      "name": "vega_public_key",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 901,
                      "src": "2769:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2754:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 906,
                  "id": 912,
                  "nodeType": "Return",
                  "src": "2746:39:5"
                }
              ]
            },
            "documentation": {
              "id": 897,
              "nodeType": "StructuredDocumentation",
              "src": "2409:223:5",
              "text": "@dev This is IStake.stake_balance\n @param target Target address to check\n @param vega_public_key Target vega public key to check\n @return the number of tokens staked for that address->vega_public_key pair"
            },
            "functionSelector": "274abf34",
            "id": 914,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stake_balance",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 903,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2708:8:5"
            },
            "parameters": {
              "id": 902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 899,
                  "mutability": "mutable",
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 914,
                  "src": "2658:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 898,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2658:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 901,
                  "mutability": "mutable",
                  "name": "vega_public_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 914,
                  "src": "2674:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 900,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2674:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2657:41:5"
            },
            "returnParameters": {
              "id": 906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 905,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 914,
                  "src": "2731:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 904,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2731:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2730:9:5"
            },
            "scope": 915,
            "src": "2635:155:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 916,
        "src": "234:2558:5"
      }
    ],
    "src": "32:4599:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.1+commit.df193b15.Emscripten.clang"
  },
  "networks": {
    "1623251933971": {
      "events": {
        "0x9e3e33edf5dcded4adabc51b1266225d00fa41516bfcad69513fa4eca69519da": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "vega_public_key",
              "type": "bytes32"
            }
          ],
          "name": "Stake_Deposited",
          "type": "event"
        },
        "0xa131d16963736e4c641f27a7f82f2e350b5971e555ae06ae906892bbba0a0939": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "vega_public_key",
              "type": "bytes32"
            }
          ],
          "name": "Stake_Removed",
          "type": "event"
        },
        "0xb21602c241043c7ee0e4b878b72dd5e2267bd7b5fad1782e67f782ce0890973a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "vega_public_key",
              "type": "bytes32"
            }
          ],
          "name": "Stake_Transfered",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x6dF9e26b93fA2257eFfacAAbe7F55C7A0C02c649",
      "transactionHash": "0x41bac1cdbf40e0fe5317559253693289df47bee9d8010b7587e0f3be4edb40f1"
    },
    "1623263158543": {
      "events": {
        "0x9e3e33edf5dcded4adabc51b1266225d00fa41516bfcad69513fa4eca69519da": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "vega_public_key",
              "type": "bytes32"
            }
          ],
          "name": "Stake_Deposited",
          "type": "event"
        },
        "0xa131d16963736e4c641f27a7f82f2e350b5971e555ae06ae906892bbba0a0939": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "vega_public_key",
              "type": "bytes32"
            }
          ],
          "name": "Stake_Removed",
          "type": "event"
        },
        "0xb21602c241043c7ee0e4b878b72dd5e2267bd7b5fad1782e67f782ce0890973a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "vega_public_key",
              "type": "bytes32"
            }
          ],
          "name": "Stake_Transfered",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xa956B5c58B4Ac8Dd1D44Ade3e8972A16e9C917E4",
      "transactionHash": "0xb8f223766b80e5e847a5fb66efafed08ad9539a768adeaaf7c4fe0f0adab55ab"
    },
    "1623263294551": {
      "events": {
        "0x9e3e33edf5dcded4adabc51b1266225d00fa41516bfcad69513fa4eca69519da": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "vega_public_key",
              "type": "bytes32"
            }
          ],
          "name": "Stake_Deposited",
          "type": "event"
        },
        "0xa131d16963736e4c641f27a7f82f2e350b5971e555ae06ae906892bbba0a0939": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "vega_public_key",
              "type": "bytes32"
            }
          ],
          "name": "Stake_Removed",
          "type": "event"
        },
        "0xb21602c241043c7ee0e4b878b72dd5e2267bd7b5fad1782e67f782ce0890973a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "vega_public_key",
              "type": "bytes32"
            }
          ],
          "name": "Stake_Transfered",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xa956B5c58B4Ac8Dd1D44Ade3e8972A16e9C917E4",
      "transactionHash": "0xb8f223766b80e5e847a5fb66efafed08ad9539a768adeaaf7c4fe0f0adab55ab"
    },
    "1623264027852": {
      "events": {
        "0x9e3e33edf5dcded4adabc51b1266225d00fa41516bfcad69513fa4eca69519da": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "vega_public_key",
              "type": "bytes32"
            }
          ],
          "name": "Stake_Deposited",
          "type": "event"
        },
        "0xa131d16963736e4c641f27a7f82f2e350b5971e555ae06ae906892bbba0a0939": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "vega_public_key",
              "type": "bytes32"
            }
          ],
          "name": "Stake_Removed",
          "type": "event"
        },
        "0xb21602c241043c7ee0e4b878b72dd5e2267bd7b5fad1782e67f782ce0890973a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "vega_public_key",
              "type": "bytes32"
            }
          ],
          "name": "Stake_Transfered",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xa956B5c58B4Ac8Dd1D44Ade3e8972A16e9C917E4",
      "transactionHash": "0xb8f223766b80e5e847a5fb66efafed08ad9539a768adeaaf7c4fe0f0adab55ab"
    }
  },
  "schemaVersion": "3.3.2",
  "updatedAt": "2021-06-14T15:25:36.719Z",
  "devdoc": {
    "author": "Vega Protocol",
    "kind": "dev",
    "methods": {
      "remove_stake(uint256,bytes32)": {
        "details": "Emits Stake_Removed event if successful",
        "params": {
          "amount": "Amount of tokens to remove from staking",
          "vega_public_key": "Target Vega public key from which to deduct stake"
        }
      },
      "stake(uint256,bytes32)": {
        "details": "Emits Stake_Deposited eventUser MUST run \"approve\" on token prior to running Stake",
        "params": {
          "amount": "Token amount to stake",
          "vega_public_key": "Target Vega public key to be credited with the stake"
        }
      },
      "stake_balance(address,bytes32)": {
        "details": "This is IStake.stake_balance",
        "params": {
          "target": "Target address to check",
          "vega_public_key": "Target vega public key to check"
        },
        "returns": {
          "_0": "the number of tokens staked for that address->vega_public_key pair"
        }
      },
      "staking_token()": {
        "details": "This is IStake.staking_token",
        "returns": {
          "_0": "the address of the token that is able to be staked"
        }
      },
      "transfer_stake(uint256,address,bytes32)": {
        "details": "Emits Stake_Transfered event if successful",
        "params": {
          "amount": "Stake amount to transfer",
          "new_address": "Target ETH address to recieve the stake",
          "vega_public_key": "Target Vega public key to be credited with the transfer"
        }
      }
    },
    "stateVariables": {
      "stakes": {
        "details": "user => amount staked"
      }
    },
    "title": "ERC20 Staking Bridge",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "remove_stake(uint256,bytes32)": {
        "notice": "This removes specified amount of stake of available to user"
      },
      "stake(uint256,bytes32)": {
        "notice": "This stakes the given amount of tokens and credits them to the provided Vega public key"
      },
      "transfer_stake(uint256,address,bytes32)": {
        "notice": "This transfers all stake from the sender's address to the \"new_address\""
      }
    },
    "notice": "This contract manages the vesting of the Vega V2 ERC20 token",
    "version": 1
  }
}